import ejs from 'ejs';
import { join, resolve } from 'path';
import { existsSync } from 'fs';
import { getDirname } from '../common/utils.js';
import { RenderOptions } from '../types/render.js';

const __dirname = getDirname(import.meta.url);
const buildTemplatePath = join(__dirname, './template/index.ejs');
const srcTemplatePath = resolve(__dirname, '../../src/render/template/index.ejs');
const templatePath = existsSync(buildTemplatePath) ? buildTemplatePath : srcTemplatePath;

/**
 * 渲染Markdown模板文件
 *
 * @param data - 用于渲染模板的数据对象，键值对形式
 * @returns 返回Promise，resolve时返回渲染后的字符串内容，reject时返回错误信息
 */
export function renderMarkdown(data: RenderOptions): Promise<string> {
  // 创建Promise包装ejs渲染操作
  return new Promise((resolvePromise, reject) => {
    // 调用ejs渲染文件方法，使用指定模板路径和传入数据进行渲染
    ejs.renderFile(templatePath, data, (err: Error | null, str?: string) => {
      if (err) {
        console.error('EJS 渲染错误:', err);
        reject(err);
        return;
      }
      resolvePromise(str as string);
    });
  });
}
